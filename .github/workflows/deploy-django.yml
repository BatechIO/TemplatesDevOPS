name: Deploy to Amazon EKS
# Controls when the action will run.
on:
  workflow_call:
    inputs:
      ENVIRONMENT:
        required: true
        type: string
      ECR_REPOSITORY:
        required: true
        type: string
      KUBE_NAMESPACE:
        required: true
        type: string
      DEPLOYMENT_NAME:
        required: true
        type: string
      CONTAINER_APP_NAME:
        required: true
        type: string
      RELEASE_REVISION:
        required: true
        type: string

    secrets:
      KUBE_CONFIG_DATA:
        required: true
      AWS_REGION:
        required: true
      AWS_ARN_ROLE:
        required: true
      AWS_SESSION_NAME:
        required: true



# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  deploy-eks:
    name: Deploy to EKS
    runs-on: ubuntu-latest
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.11.0
        with:
          access_token: ${{ github.token }}

      - name: Set env to ${{inputs.ENVIRONMENT}}
        run: |
          echo "KUBE_CONFIG_DATA=${{ secrets.KUBE_CONFIG_DATA }}" >> $GITHUB_ENV
        shell: bash

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1.7.0
        with:
          role-to-assume: ${{ secrets.AWS_ARN_ROLE }}
          role-session-name: ${{ secrets.AWS_SESSION_NAME }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        
      - name: Deploy to Kubernetes cluster
        uses: kodermax/kubectl-aws-eks@1.1.0
        env:
          RELEASE_IMAGE: ${{ steps.login-ecr.outputs.registry }}/${{ inputs.ECR_REPOSITORY }}:${{ inputs.RELEASE_REVISION }}
        with:
          args: set image deployment/${{ inputs.DEPLOYMENT_NAME }} ${{ inputs.CONTAINER_APP_NAME }}=${{ env.RELEASE_IMAGE }} -n ${{ inputs.KUBE_NAMESPACE }}

      - name: Verify Kubernetes deployment
        uses: kodermax/kubectl-aws-eks@1.1.0
        with:
          args: rollout status deployment ${{ inputs.DEPLOYMENT_NAME }} -n ${{ inputs.KUBE_NAMESPACE }}
